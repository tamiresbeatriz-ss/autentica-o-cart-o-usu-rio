// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

model usuario{
  id String @id @default(uuid())
  nome String
  email String
  login String
  senha String
  criado_em DateTime @default(now())
  modificado_em DateTime? @default(now())
  @@map("usuario")
  cartao cartao[]
}

model cartao{
  numero String @id
  nomeUsuario String
  validade String
  digitoSeguranca String
  usuario usuario @relation(fields: [id_usuario], references: [id]) 
  id_usuario String

  criado_em DateTime? @default(now())
  atualizado_em DateTime @default(now())
}

model Categoria{
  id String @id @default(uuid())
  nome String
  criado_em DateTime? @default(now())
  atualizado_em DateTime @default(now())

  @@map("categorias")
  produtos produto[]
}

model produto{
  id String @id @default(uuid())
  nome String
  preco String
  descricao String
  banner String
  criado_em DateTime? @default(now())
  atualizado_em DateTime @default(now())

  categoria Categoria @relation(fields: [id_categoria],references:[id])

  @@map("produtos")
  id_categoria String
  items Item[]
}

model Pedido{
  id String @id @default(uuid())
  mesa Int
  status Boolean @default(false)
  rascunho Boolean @default(true)
  nome String?

  criado_em DateTime? @default(now())
  atualizado_em DateTime @default(now())

  @@map("pedidos")

  items Item[]
}

model Item{
  id String @id @default(uuid())
  quantidade Int

  criado_em DateTime? @default(now())
  atualizado_em DateTime @default(now())

  pedido Pedido @relation(fields: [id_pedido], references: [id])
  produto produto @relation(fields: [id_produto], references: [id])

  @@map("items")
  id_pedido String
  id_produto String
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
